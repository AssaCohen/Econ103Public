lenghth(D)
length(D)
head(grades.out)
tail(grades.out)
grades.out <- rbind(head(grades.out), tail(grades.out))
grades.out
setwd(this.dir)
out <- latex(grades.out, file = 'grades.tex')
?latex
out <- latex(grades.out, file = 'grades.tex', rownames = FALS)
grades.out
round(grades.out,2)
out <- latex(round(grades.out,1), file = 'grades.tex', rownames = FALSE)
out <- latex(round(grades.out,1), file = 'grades.tex', rowname = NULL)
mead(D)
mean(D)
mean(grade$midterm1)
mean(grades$midterm1)
mean(grades$midterm2)
var(grades$midterm2)
var(grades$midterm1)
var(D)
r
p <- seq(from = 0, to = 1, by = 0.01)
plot(p, coin.power(a = 0.05, p, n = 40))
coin.power <- function(a, p, n){
c <-  qnorm(1 - a/2)
mu <- sqrt(n) * (2 * p - 1)
sigma <- sqrt(4 * p * (1 - p))
less.than <- pnorm( -c, mean = mu, sd = sigma)
greater.than <- 1 - pnorm(c, mean = mu, sd = sigma)
power <- less.than + greater.than
return(power)
}
p <- seq(from = 0, to = 1, by = 0.01)
plot(p, coin.power(a = 0.05, p, n = 40))
plot(p, coin.power(a = 0.05, p, n = 40), type = 'l')
alternatives <- seq(from = 0, to = 1, by = 0.01)
power <- coin.power(a = 0.05, alternatives, n = 40)
plot(alternatives, power, xlab = 'True p', ylab = 'Power' type = 'l', main = 'n = 40, a = 0.05')
alternatives <- seq(from = 0, to = 1, by = 0.01)
power <- coin.power(a = 0.05, alternatives, n = 40)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l', main = 'n = 40, a = 0.05')
alternatives <- seq(from = 0, to = 1, by = 0.01)
power <- coin.power(a = 0.05, alternatives, n = 10)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l', main = 'n = 10, a = 0.05')
alternatives <- seq(from = 0, to = 1, by = 0.01)
power <- coin.power(a = 0.1, alternatives, n = 10)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l')
alternatives <- seq(from = 0, to = 1, by = 0.01)
power <- coin.power(a = 0.01, alternatives, n = 10)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l')
alternatives <- seq(from = 0, to = 1, by = 0.01)
power <- coin.power(a = 0.01, alternatives, n = 100)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l')
alternatives <- seq(from = 0, to = 1, by = 0.01)
power <- coin.power(a = 0.01, alternatives, n = 10)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l')
#Vary sample size for fixed significance level
par(mfrow = c(2,2))
alpha <- 0.05
power.10 <- coin.power(alpha, alternatives, n = 10)
power.50 <- coin.power(alpha, alternatives, n = 50)
power.100 <- coin.power(alpha, alternatives, n = 100)
power.1000 <- coin.power(alpha, alternatives, n = 1000)
plot(alternatives, power.10, type = 'l')
part(mfrow = c(1,1))
par(mfrow = c(1,1))
par(mfrow = c(2,2))
power.10 <- coin.power(alpha, alternatives, n = 10)
power.50 <- coin.power(alpha, alternatives, n = 50)
power.100 <- coin.power(alpha, alternatives, n = 100)
power.1000 <- coin.power(alpha, alternatives, n = 1000)
plot(alternatives, power.10, type = 'l', xlab = 'True p', 'ylab = Power', main = 'n = 10, alpha = 0.05')
par(mfrow = c(1,1))
par(mfrow = c(2,2))
power.10 <- coin.power(alpha, alternatives, n = 10)
power.50 <- coin.power(alpha, alternatives, n = 50)
power.100 <- coin.power(alpha, alternatives, n = 100)
power.1000 <- coin.power(alpha, alternatives, n = 1000)
plot(alternatives, power.10, type = 'l', xlab = 'True p', 'ylab = Power', main = 'n = 10, alpha = 0.05')
par(mfrow = c(2,2))
power.10 <- coin.power(alpha, alternatives, n = 10)
power.50 <- coin.power(alpha, alternatives, n = 50)
power.100 <- coin.power(alpha, alternatives, n = 100)
power.1000 <- coin.power(alpha, alternatives, n = 1000)
plot(alternatives, power.10, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, alpha = 0.05')
par(mfrow = c(1,1))
par(mfrow = c(2,2))
power.10 <- coin.power(alpha, alternatives, n = 10)
power.50 <- coin.power(alpha, alternatives, n = 50)
power.100 <- coin.power(alpha, alternatives, n = 100)
power.1000 <- coin.power(alpha, alternatives, n = 1000)
plot(alternatives, power.10, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, alpha = 0.05')
plot(alternatives, power.10, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, alpha = 0.05')
plot(alternatives, power.10, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, alpha = 0.05')
plot(alternatives, power.10, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, alpha = 0.05')
par(mfrow = c(1,1))
#Vary sample size for fixed significance level
par(mfrow = c(2,2))
power.10 <- coin.power(alpha, alternatives, n = 10)
power.50 <- coin.power(alpha, alternatives, n = 50)
power.100 <- coin.power(alpha, alternatives, n = 100)
power.1000 <- coin.power(alpha, alternatives, n = 1000)
plot(alternatives, power.10, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, alpha = 0.05')
plot(alternatives, power.50, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50, alpha = 0.05')
plot(alternatives, power.100, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 100, alpha = 0.05')
plot(alternatives, power.1000, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 1000, alpha = 0.05')
par(mfrow = c(1,1))
#Vary sample size for fixed significance level
par(mfrow = c(2,2))
power.10 <- coin.power(alpha, alternatives, n = 10)
power.50 <- coin.power(alpha, alternatives, n = 50)
power.100 <- coin.power(alpha, alternatives, n = 100)
power.1000 <- coin.power(alpha, alternatives, n = 1000)
plot(alternatives, power.10, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, a = 0.05')
plot(alternatives, power.50, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50, a = 0.05')
plot(alternatives, power.100, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 100, a = 0.05')
plot(alternatives, power.1000, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 1000, a = 0.05')
par(mfrow = c(1,1))
coin.power <- function(a, p, n){
c <-  qnorm(1 - a/2)
mu <- sqrt(n) * (2 * p - 1)
sigma <- sqrt(4 * p * (1 - p))
less.than <- pnorm( -c, mean = mu, sd = sigma)
greater.than <- 1 - pnorm(c, mean = mu, sd = sigma)
power <- less.than + greater.than
return(power)
}
alternatives <- seq(from = 0, to = 1, by = 0.001)
power <- coin.power(a = 0.01, alternatives, n = 10)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l')
#Vary sample size for fixed significance level
par(mfrow = c(2,2))
power.10 <- coin.power(alpha, alternatives, n = 10)
power.50 <- coin.power(alpha, alternatives, n = 50)
power.100 <- coin.power(alpha, alternatives, n = 100)
power.1000 <- coin.power(alpha, alternatives, n = 1000)
plot(alternatives, power.10, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, a = 0.05')
plot(alternatives, power.50, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50, a = 0.05')
plot(alternatives, power.100, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 100, a = 0.05')
plot(alternatives, power.1000, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 1000, a = 0.05')
par(mfrow = c(1,1))
#Vary significance level for fixed sample size
par(mfrow = c(2,2))
plot(alternatives, coin.power(alpha, alternatives, n = 10), type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, a = 0.05')
plot(alternatives, coin.power(alpha, alternatives, n = 50), type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50, a = 0.05')
plot(alternatives, coin.power(alpha, alternatives, n = 100), type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 100, a = 0.05')
plot(alternatives, coin.power(alpha, alternatives, n = 1000), type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 1000, a = 0.05')
par(mfrow = c(1,1))
par(mfrow = c(2,2))
plot(alternatives, coin.power(0.01, alternatives, n = 10), type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, a = 0.01')
plot(alternatives, coin.power(0.05, alternatives, n = 10), type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, a = 0.05')
plot(alternatives, coin.power(0.1, alternatives, n = 10), type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, a = 0.1')
plot(alternatives, coin.power(0.2, alternatives, n = 10), type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 10, a = 0.2')
par(mfrow = c(1,1))
par(mfrow = c(2,2))
plot(alternatives, coin.power(0.01, alternatives, n = 50), type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50, a = 0.01')
plot(alternatives, coin.power(0.05, alternatives, n = 50), type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50, a = 0.05')
plot(alternatives, coin.power(0.1, alternatives, n = 50), type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50, a = 0.1')
plot(alternatives, coin.power(0.2, alternatives, n = 50), type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50, a = 0.2')
par(mfrow = c(1,1))
coin.power(a = 0.05, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.55, n = 1000)
coin.power(a = 0.1, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.8, n = 100)
coin.power(a = 0.05, p = 0.7, n = 100)
coin.power(a = 0.05, p = 0.6, n = 100)
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n50 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l')
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level')
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level')
points(alternatives, n50)
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level')
points(alternatives, n50, type = 'l', lty = 2)
points(alternatives, n250, type = 'l', lty = 3)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red')
points(alternatives, n50, type = 'l', lty = 2, col = 'blue')
points(alternatives, n250, type = 'l', lty = 3, col = 'orange')
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 4)
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red')
points(alternatives, n50, type = 'l', lty = 2, col = 'blue')
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
points(alternatives, n50, type = 'l', lty = 2, col = 'blue', lwd = 3)
#Vary sample size for fixed significance level
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red')
points(alternatives, n50, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
#Vary sample size for fixed significance level
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red', lwd = 3)
points(alternatives, n50, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend(bottom.right, c('n = 10',  'n = 50', ' n = 250'))
legend("bottomright", c('n = 10',  'n = 50', ' n = 250'))
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red', lwd = 3)
points(alternatives, n50, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('n = 10',  'n = 50', ' n = 250'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
#Vary significance level for fixed sample size
a01 <- coin.power(0.01, alternatives, n = 50)
a05 <- coin.power(0.05, alternatives, n = 50)
a10 <- coin.power(0.1, alternatives, n = 50)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50', col = 'red', lwd = 3)
points(alternatives, a05, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, a10, type = 'l', lty = 3, col = 'orange', lwd = 3)
#legend("bottomright", c('n = 10',  'n = 50', ' n = 250'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'Two-sided Test of p = 0.5, n = 50', col = 'red', lwd = 3)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'Two-sided Test of p = 0.5 with a sample size n = 50', col = 'red', lwd = 3)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'Two-sided Test of p = 0.5, Sample Size n = 50', col = 'red', lwd = 3)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50', col = 'red', lwd = 3)
#Vary significance level for fixed sample size
a01 <- coin.power(0.01, alternatives, n = 50)
a05 <- coin.power(0.05, alternatives, n = 50)
a10 <- coin.power(0.1, alternatives, n = 50)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50', col = 'red', lwd = 3)
points(alternatives, a05, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, a10, type = 'l', lty = 3, col = 'orange', lwd = 3)
#legend("bottomright", c('n = 10',  'n = 50', ' n = 250'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
a01 <- coin.power(0.01, alternatives, n = 50)
a05 <- coin.power(0.05, alternatives, n = 50)
a10 <- coin.power(0.1, alternatives, n = 50)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50', col = 'red', lwd = 3)
points(alternatives, a05, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, a10, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('a = 0.01' ,  'a = 0.05', 'a = 0.10'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
#Vary significance level for fixed sample size
a01 <- coin.power(0.01, alternatives, n = 50)
a05 <- coin.power(0.05, alternatives, n = 50)
a10 <- coin.power(0.1, alternatives, n = 50)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50', col = 'red', lwd = 3)
points(alternatives, a05, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, a10, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('1% Level' ,  '5% Level', '10% Level'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
coin.power <- function(a, p, n){
c <-  qnorm(1 - a/2)
mu <- sqrt(n) * (2 * p - 1)
sigma <- sqrt(4 * p * (1 - p))
less.than <- pnorm( -c, mean = mu, sd = sigma)
greater.than <- 1 - pnorm(c, mean = mu, sd = sigma)
power <- less.than + greater.than
return(power)
}
coin.power(a = 0.05, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.55, n = 1000)
coin.power(a = 0.1, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.6, n = 100)
alternatives <- seq(from = 0, to = 1, by = 0.001)
power <- coin.power(a = 0.05, alternatives, n = 10)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l')
#Vary sample size for fixed significance level
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red', lwd = 3)
points(alternatives, n50, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('n = 10',  'n = 50', ' n = 250'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
#Vary significance level for fixed sample size
a01 <- coin.power(0.01, alternatives, n = 50)
a05 <- coin.power(0.05, alternatives, n = 50)
a10 <- coin.power(0.1, alternatives, n = 50)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'n = 50', col = 'red', lwd = 3)
points(alternatives, a05, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, a10, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('1% Level' ,  '5% Level', '10% Level'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
coin.power <- function(a, p, n){
c <-  qnorm(1 - a/2)
mu <- sqrt(n) * (2 * p - 1)
sigma <- sqrt(4 * p * (1 - p))
less.than <- pnorm( -c, mean = mu, sd = sigma)
greater.than <- 1 - pnorm(c, mean = mu, sd = sigma)
power <- less.than + greater.than
return(power)
}
coin.power(a = 0.05, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.55, n = 1000)
coin.power(a = 0.1, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.6, n = 100)
alternatives <- seq(from = 0, to = 1, by = 0.001)
power <- coin.power(a = 0.05, alternatives, n = 10)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l')
#Vary sample size for fixed significance level
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red', lwd = 3)
points(alternatives, n50, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('n = 10',  'n = 50', ' n = 250'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
#Vary significance level for fixed sample size
a01 <- coin.power(0.01, alternatives, n = 50)
a05 <- coin.power(0.05, alternatives, n = 50)
a10 <- coin.power(0.1, alternatives, n = 50)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'Sample Size of 50 Observations', col = 'red', lwd = 3)
points(alternatives, a05, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, a10, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('1% Level' ,  '5% Level', '10% Level'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
par(mfrow = c(2,1))
#Vary sample size for fixed significance level
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red', lwd = 3)
points(alternatives, n50, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('n = 10',  'n = 50', ' n = 250'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
#Vary significance level for fixed sample size
a01 <- coin.power(0.01, alternatives, n = 50)
a05 <- coin.power(0.05, alternatives, n = 50)
a10 <- coin.power(0.1, alternatives, n = 50)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'Sample Size of 50 Observations', col = 'red', lwd = 3)
points(alternatives, a05, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, a10, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('1% Level' ,  '5% Level', '10% Level'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
par(mfrow = c(1,1))
coin.power <- function(a, p, n){
c <-  qnorm(1 - a/2)
mu <- sqrt(n) * (2 * p - 1)
sigma <- sqrt(4 * p * (1 - p))
less.than <- pnorm( -c, mean = mu, sd = sigma)
greater.than <- 1 - pnorm(c, mean = mu, sd = sigma)
power <- less.than + greater.than
return(power)
}
coin.power(a = 0.05, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.55, n = 1000)
coin.power(a = 0.1, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.6, n = 100)
alternatives <- seq(from = 0, to = 1, by = 0.001)
power <- coin.power(a = 0.05, alternatives, n = 10)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l')
#Vary sample size for fixed significance level
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red', lwd = 3)
points(alternatives, n50, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('n = 10',  'n = 50', ' n = 250'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
#Vary significance level for fixed sample size
a01 <- coin.power(0.01, alternatives, n = 50)
a05 <- coin.power(0.05, alternatives, n = 50)
a10 <- coin.power(0.1, alternatives, n = 50)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'Sample Size of 50 Observations', col = 'red', lwd = 3)
points(alternatives, a05, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, a10, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('1% Level' ,  '5% Level', '10% Level'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
coin.power <- function(a, p, n){
c <-  qnorm(1 - a/2)
mu <- sqrt(n) * (2 * p - 1)
sigma <- sqrt(4 * p * (1 - p))
less.than <- pnorm( -c, mean = mu, sd = sigma)
greater.than <- 1 - pnorm(c, mean = mu, sd = sigma)
power <- less.than + greater.than
return(power)
}
coin.power(a = 0.05, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.55, n = 1000)
coin.power(a = 0.1, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.6, n = 100)
alternatives <- seq(from = 0, to = 1, by = 0.001)
power <- coin.power(a = 0.05, alternatives, n = 10)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l')
#Vary sample size for fixed significance level
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red', lwd = 3)
points(alternatives, n50, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('n = 10',  'n = 50', ' n = 250'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
#Vary significance level for fixed sample size
a01 <- coin.power(0.01, alternatives, n = 50)
a05 <- coin.power(0.05, alternatives, n = 50)
a10 <- coin.power(0.1, alternatives, n = 50)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'Sample Size of 50 Observations', col = 'red', lwd = 3)
points(alternatives, a05, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, a10, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('1% Level' ,  '5% Level', '10% Level'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
rm(list = ls())
coin.power <- function(a, p, n){
c <-  qnorm(1 - a/2)
mu <- sqrt(n) * (2 * p - 1)
sigma <- sqrt(4 * p * (1 - p))
less.than <- pnorm( -c, mean = mu, sd = sigma)
greater.than <- 1 - pnorm(c, mean = mu, sd = sigma)
power <- less.than + greater.than
return(power)
}
coin.power(a = 0.05, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.55, n = 1000)
coin.power(a = 0.1, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.6, n = 100)
alternatives <- seq(from = 0, to = 1, by = 0.001)
power <- coin.power(a = 0.05, alternatives, n = 10)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l')
#Vary sample size for fixed significance level
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red', lwd = 3)
points(alternatives, n50, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('n = 10',  'n = 50', ' n = 250'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
#Vary significance level for fixed sample size
a01 <- coin.power(0.01, alternatives, n = 50)
a05 <- coin.power(0.05, alternatives, n = 50)
a10 <- coin.power(0.1, alternatives, n = 50)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'Sample Size of 50 Observations', col = 'red', lwd = 3)
points(alternatives, a05, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, a10, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('1% Level' ,  '5% Level', '10% Level'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
coin.power <- function(a, p, n){
c <-  qnorm(1 - a/2)
mu <- sqrt(n) * (2 * p - 1)
sigma <- sqrt(4 * p * (1 - p))
less.than <- pnorm( -c, mean = mu, sd = sigma)
greater.than <- 1 - pnorm(c, mean = mu, sd = sigma)
power <- less.than + greater.than
return(power)
}
coin.power(a = 0.05, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.55, n = 1000)
coin.power(a = 0.1, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.6, n = 100)
alternatives <- seq(from = 0, to = 1, by = 0.001)
power <- coin.power(a = 0.05, alternatives, n = 10)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l')
#Vary sample size for fixed significance level
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red', lwd = 3)
points(alternatives, n50, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('n = 10',  'n = 50', ' n = 250'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
#Vary significance level for fixed sample size
a01 <- coin.power(0.01, alternatives, n = 50)
a05 <- coin.power(0.05, alternatives, n = 50)
a10 <- coin.power(0.1, alternatives, n = 50)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'Sample Size of 50 Observations', col = 'red', lwd = 3)
points(alternatives, a05, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, a10, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('1% Level' ,  '5% Level', '10% Level'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3)
coin.power <- function(a, p, n){
c <-  qnorm(1 - a/2)
mu <- sqrt(n) * (2 * p - 1)
sigma <- sqrt(4 * p * (1 - p))
less.than <- pnorm( -c, mean = mu, sd = sigma)
greater.than <- 1 - pnorm(c, mean = mu, sd = sigma)
power <- less.than + greater.than
return(power)
}
coin.power(a = 0.05, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.55, n = 1000)
coin.power(a = 0.1, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.6, n = 100)
alternatives <- seq(from = 0, to = 1, by = 0.001)
power <- coin.power(a = 0.05, alternatives, n = 10)
plot(alternatives, power, xlab = 'True p', ylab = 'Power', type = 'l')
#Vary sample size for fixed significance level
n10 <- coin.power(0.05, alternatives, n = 10)
n50 <- coin.power(0.05, alternatives, n = 50)
n250 <- coin.power(0.05, alternatives, n = 250)
plot(alternatives, n10, type = 'l', xlab = 'True p', ylab = 'Power', main = '5% Significance Level', col = 'red', lwd = 3)
points(alternatives, n50, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, n250, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('n = 10',  'n = 50', ' n = 250'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3, cex = 0.8)
#Vary significance level for fixed sample size
a01 <- coin.power(0.01, alternatives, n = 50)
a05 <- coin.power(0.05, alternatives, n = 50)
a10 <- coin.power(0.1, alternatives, n = 50)
plot(alternatives, a01, type = 'l', xlab = 'True p', ylab = 'Power', main = 'Sample Size of 50 Observations', col = 'red', lwd = 3)
points(alternatives, a05, type = 'l', lty = 2, col = 'blue', lwd = 3)
points(alternatives, a10, type = 'l', lty = 3, col = 'orange', lwd = 3)
legend("bottomright", c('1% Level' ,  '5% Level', '10% Level'), lty = 1:3, col = c('red', 'blue', 'orange'), lwd = 3, cex = 0.8)
coin.power(a = 0.05, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.55, n = 1000)
coin.power(a = 0.1, p = 0.55, n = 100)
coin.power(a = 0.05, p = 0.6, n = 100)
#Don't Compare p-values!
pR <- 0.61
nR <- 239
pD <- 0.53
nD <- 238
TR <- (pR - 0.5)/sqrt(0.5 * (1 - 0.5)/nR)
p.valueR <- 2 * (1 - pnorm(abs(TR)))
TD <- (pD - 0.5)/sqrt(0.5 * (1 - 0.5)/nD)
p.valueD <- 2 * (1 - pnorm(abs(TD)))
p.pool <- (nR * pR + pD * nD)/(nR + nD)
SE.null.diff <- sqrt((1/nR + 1/nD) * p.pool * (1 - p.pool))
Tdiff <- (pR - pD)/SE.null.diff
2 * (1 - pnorm(abs(Tdiff)))
